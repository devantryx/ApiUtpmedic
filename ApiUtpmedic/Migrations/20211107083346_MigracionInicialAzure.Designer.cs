// <auto-generated />
using System;
using ApiUtpmedic.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApiUtpmedic.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211107083346_MigracionInicialAzure")]
    partial class MigracionInicialAzure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ApiUtpmedic.Models.Cita", b =>
                {
                    b.Property<int>("idcita")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("idhorario")
                        .HasColumnType("int");

                    b.Property<int?>("idpaciente")
                        .HasColumnType("int");

                    b.HasKey("idcita");

                    b.HasIndex("idhorario");

                    b.HasIndex("idpaciente");

                    b.ToTable("Cita");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Clinica", b =>
                {
                    b.Property<int>("idclinica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("clinica_direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clinica_distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clinica_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clinica_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clinica_ruc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clinica_telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idclinica");

                    b.ToTable("Clinica");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Especialidad", b =>
                {
                    b.Property<int>("idespecialidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("especialidad_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idespecialidad");

                    b.ToTable("Especialidad");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Horario", b =>
                {
                    b.Property<int>("idhorario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("horario_dia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horario_hfin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horario_hinicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idmedico")
                        .HasColumnType("int");

                    b.HasKey("idhorario");

                    b.HasIndex("idmedico");

                    b.ToTable("Horario");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Medico", b =>
                {
                    b.Property<int>("idmedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("idclinica")
                        .HasColumnType("int");

                    b.Property<int?>("idespecialidad")
                        .HasColumnType("int");

                    b.Property<int?>("idpersona")
                        .HasColumnType("int");

                    b.HasKey("idmedico");

                    b.HasIndex("idclinica");

                    b.HasIndex("idespecialidad");

                    b.HasIndex("idpersona");

                    b.ToTable("Medico");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Paciente", b =>
                {
                    b.Property<int>("idpaciente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idpersona")
                        .HasColumnType("int");

                    b.Property<int>("idusuario")
                        .HasColumnType("int");

                    b.HasKey("idpaciente");

                    b.HasIndex("idpersona");

                    b.HasIndex("idusuario");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Persona", b =>
                {
                    b.Property<int>("idpersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fecNac")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_distrito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_dni")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("persona_telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idpersona");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Publicacion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fecha_publicacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("idusuario")
                        .HasColumnType("int");

                    b.Property<int>("megusta")
                        .HasColumnType("int");

                    b.Property<string>("mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombrefoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario_user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("idusuario");

                    b.ToTable("Publicacion");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.TipoUsuario", b =>
                {
                    b.Property<int>("idtipousuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("tipousuario_descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idtipousuario");

                    b.ToTable("TipoUsuario");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Usuario", b =>
                {
                    b.Property<int>("idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("idtipousuario")
                        .HasColumnType("int");

                    b.Property<string>("nombrefoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("usuario_clave")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("usuario_clave2")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("usuario_user")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idusuario");

                    b.HasIndex("idtipousuario");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Cita", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.Horario", "Horario")
                        .WithMany()
                        .HasForeignKey("idhorario");

                    b.HasOne("ApiUtpmedic.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("idpaciente");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Horario", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.Medico", "Medico")
                        .WithMany()
                        .HasForeignKey("idmedico");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Medico", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.Clinica", "Clinica")
                        .WithMany()
                        .HasForeignKey("idclinica");

                    b.HasOne("ApiUtpmedic.Models.Especialidad", "Especialidad")
                        .WithMany()
                        .HasForeignKey("idespecialidad");

                    b.HasOne("ApiUtpmedic.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("idpersona");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Paciente", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.Persona", "Persona")
                        .WithMany()
                        .HasForeignKey("idpersona")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiUtpmedic.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Publicacion", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("idusuario");
                });

            modelBuilder.Entity("ApiUtpmedic.Models.Usuario", b =>
                {
                    b.HasOne("ApiUtpmedic.Models.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("idtipousuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
